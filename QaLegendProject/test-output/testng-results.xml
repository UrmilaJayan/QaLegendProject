<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="6" total="19" passed="11" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-29T13:26:40 IST" name="Suite" finished-at="2023-06-29T13:27:36 IST" duration-ms="55592">
    <groups>
      <group name="smoke">
        <method signature="LoginTest.verifySigninInvalidUserValidPassword(java.lang.String,int)[pri:1, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" name="verifySigninInvalidUserValidPassword" class="com.QaLegendProject.Scripts.LoginTest"/>
        <method signature="LoginTest.verifySigninValidUserInvalidPassword(java.lang.String,int)[pri:2, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" name="verifySigninValidUserInvalidPassword" class="com.QaLegendProject.Scripts.LoginTest"/>
        <method signature="LoginTest.verifySigninInvalidUserInvalidPassword(java.lang.String,int)[pri:3, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" name="verifySigninInvalidUserInvalidPassword" class="com.QaLegendProject.Scripts.LoginTest"/>
        <method signature="LoginTest.verifySigninValidUserValidPassword(java.lang.String,int)[pri:4, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" name="verifySigninValidUserValidPassword" class="com.QaLegendProject.Scripts.LoginTest"/>
        <method signature="AddPurchaseTest.checkinkFileUploadFunctionality()[pri:5, instance:com.QaLegendProject.Scripts.AddPurchaseTest@f0c8a99]" name="checkinkFileUploadFunctionality" class="com.QaLegendProject.Scripts.AddPurchaseTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-06-29T13:26:40 IST" name="Test" finished-at="2023-06-29T13:27:36 IST" duration-ms="55592">
      <class name="com.QaLegendProject.Base.TestBasePro">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:com.QaLegendProject.Base.TestBasePro@71ba6d4e]" started-at="2023-06-29T13:26:40 IST" name="beforeTest" finished-at="2023-06-29T13:27:04 IST" duration-ms="23279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.QaLegendProject.Base.TestBasePro@71ba6d4e]" started-at="2023-06-29T13:27:35 IST" name="afterTest" finished-at="2023-06-29T13:27:36 IST" duration-ms="1169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.QaLegendProject.Base.TestBasePro -->
      <class name="com.QaLegendProject.Scripts.StockTransferListTest">
        <test-method signature="clickStockTransferList()[pri:6, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:16 IST" name="clickStockTransferList" finished-at="2023-06-29T13:27:18 IST" duration-ms="1718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickStockTransferList -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:18 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickStockTransferList status=SUCCESS method=StockTransferListTest.clickStockTransferList()[pri:6, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="checkingShowEntriesDropdownText()[pri:7, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:18 IST" name="checkingShowEntriesDropdownText" description="Validating show entries dropdown button" finished-at="2023-06-29T13:27:21 IST" duration-ms="2405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingShowEntriesDropdownText -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkingShowEntriesDropdownText status=SUCCESS method=StockTransferListTest.checkingShowEntriesDropdownText()[pri:7, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method retried="true" signature="viewDeatailsFunctionality()[pri:8, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="viewDeatailsFunctionality" description="Verifying functionality of view deatails button" finished-at="2023-06-29T13:27:21 IST" duration-ms="130" status="SKIP">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=109.0.5414.149)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6d4dbd48ed00ee3425e005d74b3e3323, clickElement {id=e274a2b0-4f0c-477f-9f79-a68cd56703fb}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.149, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\JAYAN~1.URM\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:57841}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57841/devtoo..., se:cdpVersion: 109.0.5414.149, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (6d4dbd48ed00ee3425e005d74b3e3323)] -> xpath: //*[@id="463"]/td[8]/button]
Session ID: 6d4dbd48ed00ee3425e005d74b3e3323]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=109.0.5414.149)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6d4dbd48ed00ee3425e005d74b3e3323, clickElement {id=e274a2b0-4f0c-477f-9f79-a68cd56703fb}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.149, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\JAYAN~1.URM\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:57841}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57841/devtoo..., se:cdpVersion: 109.0.5414.149, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (6d4dbd48ed00ee3425e005d74b3e3323)] -> xpath: //*[@id="463"]/td[8]/button]
Session ID: 6d4dbd48ed00ee3425e005d74b3e3323
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at com.QaLegendProject.Pages.StockTransfersListPage.clickViewDetails(StockTransfersListPage.java:102)
at com.QaLegendProject.Scripts.StockTransferListTest.viewDeatailsFunctionality(StockTransferListTest.java:44)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewDeatailsFunctionality -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewDeatailsFunctionality status=SKIP method=StockTransferListTest.viewDeatailsFunctionality()[pri:8, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="viewDeatailsFunctionality()[pri:8, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="viewDeatailsFunctionality" description="Verifying functionality of view deatails button" finished-at="2023-06-29T13:27:21 IST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewDeatailsFunctionality -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewDeatailsFunctionality status=SUCCESS method=StockTransferListTest.viewDeatailsFunctionality()[pri:8, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="verifyNoOfColumns()[pri:9, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="verifyNoOfColumns" description="Verifying number of columns in web table listing all stock transfers" finished-at="2023-06-29T13:27:21 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoOfColumns -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoOfColumns status=SUCCESS method=StockTransferListTest.verifyNoOfColumns()[pri:9, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="checkingWebtableElementPresent()[pri:10, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:21 IST" name="checkingWebtableElementPresent" description="Verifying Webtable element" finished-at="2023-06-29T13:27:25 IST" duration-ms="3793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingWebtableElementPresent -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:25 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkingWebtableElementPresent status=SUCCESS method=StockTransferListTest.checkingWebtableElementPresent()[pri:10, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method retried="true" signature="checkingCopyFunctionality()[pri:11, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:25 IST" name="checkingCopyFunctionality" description="Validating copy functionality under Action menu" finished-at="2023-06-29T13:27:30 IST" duration-ms="5122" status="SKIP">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=109.0.5414.149)
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6d4dbd48ed00ee3425e005d74b3e3323, clickElement {id=5c433325-e6ef-4de8-8a62-365137a5b257}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.149, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\JAYAN~1.URM\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:57841}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57841/devtoo..., se:cdpVersion: 109.0.5414.149, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (6d4dbd48ed00ee3425e005d74b3e3323)] -> xpath: //a[@href='https://qalegend.com/billing/public/stock-transfers']]
Session ID: 6d4dbd48ed00ee3425e005d74b3e3323]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=109.0.5414.149)
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6d4dbd48ed00ee3425e005d74b3e3323, clickElement {id=5c433325-e6ef-4de8-8a62-365137a5b257}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.149, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\JAYAN~1.URM\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:57841}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57841/devtoo..., se:cdpVersion: 109.0.5414.149, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (6d4dbd48ed00ee3425e005d74b3e3323)] -> xpath: //a[@href='https://qalegend.com/billing/public/stock-transfers']]
Session ID: 6d4dbd48ed00ee3425e005d74b3e3323
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at com.QaLegendProject.Pages.StockTransfersListPage.clickListStockTransferSubMenu(StockTransfersListPage.java:68)
at com.QaLegendProject.Scripts.StockTransferListTest.checkingCopyFunctionality(StockTransferListTest.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingCopyFunctionality -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:30 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkingCopyFunctionality status=SKIP method=StockTransferListTest.checkingCopyFunctionality()[pri:11, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="checkingCopyFunctionality()[pri:11, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:30 IST" name="checkingCopyFunctionality" description="Validating copy functionality under Action menu" finished-at="2023-06-29T13:27:35 IST" duration-ms="4765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingCopyFunctionality -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9]" started-at="2023-06-29T13:27:35 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkingCopyFunctionality status=SUCCESS method=StockTransferListTest.checkingCopyFunctionality()[pri:11, instance:com.QaLegendProject.Scripts.StockTransferListTest@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- com.QaLegendProject.Scripts.StockTransferListTest -->
      <class name="com.QaLegendProject.Scripts.AddPurchaseTest">
        <test-method signature="checkinkFileUploadFunctionality()[pri:5, instance:com.QaLegendProject.Scripts.AddPurchaseTest@f0c8a99]" started-at="2023-06-29T13:27:13 IST" name="checkinkFileUploadFunctionality" description="Verifying File Upload" finished-at="2023-06-29T13:27:16 IST" duration-ms="3784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkinkFileUploadFunctionality -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.AddPurchaseTest@f0c8a99]" started-at="2023-06-29T13:27:16 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkinkFileUploadFunctionality status=SUCCESS method=AddPurchaseTest.checkinkFileUploadFunctionality()[pri:5, instance:com.QaLegendProject.Scripts.AddPurchaseTest@f0c8a99] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- com.QaLegendProject.Scripts.AddPurchaseTest -->
      <class name="com.QaLegendProject.Scripts.LoginTest">
        <test-method signature="verifySigninInvalidUserValidPassword(java.lang.String,int)[pri:1, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:05 IST" name="verifySigninInvalidUserValidPassword" description="Verifying sign in using invalid user name and valid password" data-provider="invalidUserValidPassword" finished-at="2023-06-29T13:27:06 IST" duration-ms="1519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySigninInvalidUserValidPassword -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:06 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:06 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySigninInvalidUserValidPassword status=SUCCESS method=LoginTest.verifySigninInvalidUserValidPassword(java.lang.String,int)[pri:1, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="verifySigninValidUserInvalidPassword(java.lang.String,int)[pri:2, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:06 IST" name="verifySigninValidUserInvalidPassword" description="Verifying sign in using valid user name and invalid password" data-provider="validUserInvalidPassword" finished-at="2023-06-29T13:27:08 IST" duration-ms="1661" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySigninValidUserInvalidPassword -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:08 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySigninValidUserInvalidPassword status=SUCCESS method=LoginTest.verifySigninValidUserInvalidPassword(java.lang.String,int)[pri:2, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="verifySigninInvalidUserInvalidPassword(java.lang.String,int)[pri:3, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:08 IST" name="verifySigninInvalidUserInvalidPassword" description="Verifying sign in using invalid user name and invalid password" data-provider="invalidUserInvalidPassword" finished-at="2023-06-29T13:27:09 IST" duration-ms="1346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[adm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySigninInvalidUserInvalidPassword -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:09 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySigninInvalidUserInvalidPassword status=SUCCESS method=LoginTest.verifySigninInvalidUserInvalidPassword(java.lang.String,int)[pri:3, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="verifySigninValidUserValidPassword(java.lang.String,int)[pri:4, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:09 IST" name="verifySigninValidUserValidPassword" description="Verifying sign in using valid user name and valid password" data-provider="validUserValidPassword" finished-at="2023-06-29T13:27:13 IST" duration-ms="3127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySigninValidUserValidPassword -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd]" started-at="2023-06-29T13:27:13 IST" name="takeScreenShotOnFailure" finished-at="2023-06-29T13:27:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySigninValidUserValidPassword status=SUCCESS method=LoginTest.verifySigninValidUserValidPassword(java.lang.String,int)[pri:4, instance:com.QaLegendProject.Scripts.LoginTest@46cdf8bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- com.QaLegendProject.Scripts.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
